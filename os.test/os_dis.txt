
os.elf:     file format elf32-i386
os.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00007c00

Program Header:
    LOAD off    0x00000000 vaddr 0x00007000 paddr 0x00007000 align 2**12
         filesz 0x00000e02 memsz 0x00000e02 flags r-x

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000202  00007c00  00007c00  00000c00  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000011  00000000  00000000  00000e02  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000e18  2**3
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000004c  00000000  00000000  00000e38  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000014  00000000  00000000  00000e84  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000048  00000000  00000000  00000e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_str    00000078  00000000  00000000  00000ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00007c00 l    d  .text	00000000 .text
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    df *ABS*	00000000 start.o
00007e00 l       .text	00000000 _start_32
00000000 l    df *ABS*	00000000 os.c
00007c00 g       .text	00000000 _start
00008e02 g       .text	00000000 __bss_start
00008e02 g       .text	00000000 _edata
00008e04 g       .text	00000000 _end



Disassembly of section .text:

00007c00 <_start>:
	// 以下是代码区
 	.text
_start:
	// x86使用段寄存器中的内容作为内存访问的基址，因此以下预先设置好
	// 采用平坦模型，段寄存器全部设置为0，直接使用偏移量作为地址
	mov $0, %ax				// 设置代码段
    7c00:	b8 00 00 8e d8       	mov    $0xd88e0000,%eax
	mov %ax, %ds			// 设置数据段
	mov %ax, %es			// 设置数据段
    7c05:	8e c0                	mov    %eax,%es
	mov %ax, %ss			// 设置栈段
    7c07:	8e d0                	mov    %eax,%ss
	mov $_start, %esp		// 设置栈的起始地址，由于从高地址向低地址压栈，初始化栈顶为高地址，使用0x7c00之前的空间作栈，设为0x7c00
    7c09:	66 bc 00 7c          	mov    $0x7c00,%sp
	...
    7dfd:	00 55 aa             	add    %dl,-0x56(%ebp)

00007e00 <_start_32>:

	// 32位保护模式，位于512字节后
	.code32
	.text
_start_32:
    7e00:	eb fe                	jmp    7e00 <_start_32>
